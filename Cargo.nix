# This file was @generated by cargo2nix 0.11.0.
# It is not intended to be manually edited.

args@{ release ? true
, rootFeatures ? [
    "www-saffi/default"
    "www-saffi-dev/default"
    "www-saffi-wtf/default"
  ]
, rustPackages
, buildRustPackages
, hostPlatform
, hostPlatformCpu ? null
, hostPlatformFeatures ? [ ]
, target ? null
, codegenOpts ? null
, profileOpts ? null
, cargoUnstableFlags ? null
, rustcLinkFlags ? null
, rustcBuildFlags ? null
, mkRustCrate
, rustLib
, lib
, workspaceSrc
, ignoreLockHash
,
}:
let
  nixifiedLockHash = "b236361188bb5bc7b0da3085fbb6055271f2bf2b62d83971abba1e72cb992add";
  workspaceSrc = if args.workspaceSrc == null then ./. else args.workspaceSrc;
  currentLockHash = builtins.hashFile "sha256" (workspaceSrc + /Cargo.lock);
  lockHashIgnored =
    if ignoreLockHash
    then builtins.trace "Ignoring lock hash" ignoreLockHash
    else ignoreLockHash;
in
if !lockHashIgnored && (nixifiedLockHash != currentLockHash) then
  throw ("Cargo.nix ${nixifiedLockHash} is out of sync with Cargo.lock ${currentLockHash}")
else
  let
    inherit (rustLib) fetchCratesIo fetchCrateLocal fetchCrateGit fetchCrateAlternativeRegistry expandFeatures decideProfile genDrvsByProfile;
    profilesByName = { };
    rootFeatures' = expandFeatures rootFeatures;
    overridableMkRustCrate = f:
      let
        drvs = genDrvsByProfile profilesByName ({ profile, profileName }: mkRustCrate ({ inherit release profile hostPlatformCpu hostPlatformFeatures target profileOpts codegenOpts cargoUnstableFlags rustcLinkFlags rustcBuildFlags; } // (f profileName)));
      in
      { compileMode ? null, profileName ? decideProfile compileMode release }:
      let drv = drvs.${profileName}; in if compileMode == null then drv else drv.override { inherit compileMode; };
  in
  {
    cargo2nixVersion = "0.11.0";
    workspace = {
      www-saffi = rustPackages.unknown.www-saffi."0.1.0";
      www-saffi-dev = rustPackages.unknown.www-saffi-dev."0.1.0";
      www-saffi-wtf = rustPackages.unknown.www-saffi-wtf."0.1.0";
    };
    "registry+https://github.com/rust-lang/crates.io-index".addr2line."0.21.0" = overridableMkRustCrate (profileName: rec {
      name = "addr2line";
      version = "0.21.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8a30b2e23b9e17a9f90641c7ab1549cd9b44f296d3ccbf309d2863cfe398a0cb"; };
      dependencies = {
        gimli = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".gimli."0.28.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "adler";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f26201604c87b1e01bd3d98f8d5d9a8fcbb815e8cedb41ffccbeb4bf593a35fe"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.8" = overridableMkRustCrate (profileName: rec {
      name = "ahash";
      version = "0.8.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "42cd52102d3df161c77a887b608d7a4897d7cc112886a9537b738a887a03aaff"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if !((hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l") && hostPlatform.parsed.kernel.name == "none") then "once_cell" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        zerocopy = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.32" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.2" = overridableMkRustCrate (profileName: rec {
      name = "aho-corasick";
      version = "1.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b2969dcb958b36655471fc61f7e416fa76033bdd4bfed0678d8fee1e2d07a1f0"; };
      features = builtins.concatLists [
        [ "perf-literal" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.11" = overridableMkRustCrate (profileName: rec {
      name = "anstream";
      version = "0.6.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6e2e1ebcb11de5c03c67de28a7df593d32191b44939c482e97702baaaa6ab6a5"; };
      features = builtins.concatLists [
        [ "auto" ]
        [ "default" ]
        [ "wincon" ]
      ];
      dependencies = {
        anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.6" { inherit profileName; }).out;
        anstyle_parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.3" { inherit profileName; }).out;
        anstyle_query = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.0.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "anstyle_wincon" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."3.0.2" { inherit profileName; }).out;
        colorchoice = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.0" { inherit profileName; }).out;
        utf8parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.6" = overridableMkRustCrate (profileName: rec {
      name = "anstyle";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8901269c6307e8d93993578286ac0edf7f195079ffff5ebdeea6a59ffb7e36bc"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle-parse."0.2.3" = overridableMkRustCrate (profileName: rec {
      name = "anstyle-parse";
      version = "0.2.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c75ac65da39e5fe5ab759307499ddad880d724eed2f6ce5b5e8a26f4f387928c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "utf8" ]
      ];
      dependencies = {
        utf8parse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle-query."1.0.2" = overridableMkRustCrate (profileName: rec {
      name = "anstyle-query";
      version = "1.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e28923312444cdd728e4738b3f9c9cac739500909bb3d3c94b43551b16517648"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".anstyle-wincon."3.0.2" = overridableMkRustCrate (profileName: rec {
      name = "anstyle-wincon";
      version = "3.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1cd54b81ec8d6180e24654d0b371ad22fc3dd083b6ff8ba325b72e00c87660a7"; };
      dependencies = {
        anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.77" = overridableMkRustCrate (profileName: rec {
      name = "async-trait";
      version = "0.1.77";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c980ee35e870bd1a4d2c8294d4c04d0499e67bca1e4b5cefcc693c2fa00caea9"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "autocfg";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d468802bab17cbc0cc575e9b053f41e72aa36bfa6b7f55e3529ffa43161b97fa"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".axum."0.7.4" = overridableMkRustCrate (profileName: rec {
      name = "axum";
      version = "0.7.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1236b4b292f6c4d6dc34604bb5120d85c3fe1d1aa596bd5cc52ca054d13e7b9e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "form" ]
        [ "http1" ]
        [ "json" ]
        [ "matched-path" ]
        [ "original-uri" ]
        [ "query" ]
        [ "tokio" ]
        [ "tower-log" ]
        [ "tracing" ]
      ];
      dependencies = {
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.77" { profileName = "__noProfile"; }).out;
        axum_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum-core."0.4.3" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" { inherit profileName; }).out;
        http_body_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body-util."0.1.0" { inherit profileName; }).out;
        hyper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."1.1.0" { inherit profileName; }).out;
        hyper_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper-util."0.1.3" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        matchit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchit."0.7.3" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.113" { inherit profileName; }).out;
        serde_path_to_error = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.15" { inherit profileName; }).out;
        serde_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" { inherit profileName; }).out;
        sync_wrapper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tower = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; }).out;
        tower_layer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
      buildDependencies = {
        rustversion = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.14" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".axum-core."0.4.3" = overridableMkRustCrate (profileName: rec {
      name = "axum-core";
      version = "0.4.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a15c63fd72d41492dc4f497196f5da1fb04fb7529e631d73630d1b491e47a2e3"; };
      features = builtins.concatLists [
        [ "tracing" ]
      ];
      dependencies = {
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.77" { profileName = "__noProfile"; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" { inherit profileName; }).out;
        http_body_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body-util."0.1.0" { inherit profileName; }).out;
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        sync_wrapper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" { inherit profileName; }).out;
        tower_layer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
      buildDependencies = {
        rustversion = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.14" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".axum-tracing-opentelemetry."0.16.0" = overridableMkRustCrate (profileName: rec {
      name = "axum-tracing-opentelemetry";
      version = "0.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bdad298231394729042d1f155b93f9fdf0b5ee1aea0b62404c4d7341f7d8fe08"; };
      dependencies = {
        axum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum."0.7.4" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry."0.21.0" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tower = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.22.0" { inherit profileName; }).out;
        tracing_opentelemetry_instrumentation_sdk = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry-instrumentation-sdk."0.16.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.69" = overridableMkRustCrate (profileName: rec {
      name = "backtrace";
      version = "0.3.69";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2089b7e3f35b9dd2d0ed921ead4f6d318c27680d4a5bd167b3ee120edb105837"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "addr2line" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".addr2line."0.21.0" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "miniz_oxide" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.2" { inherit profileName; }).out;
        ${ if !(hostPlatform.isWindows && hostPlatform.parsed.abi.name == "msvc" && !(hostPlatform.parsed.vendor.name == "uwp")) then "object" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".object."0.32.2" { inherit profileName; }).out;
        rustc_demangle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.23" { inherit profileName; }).out;
      };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" = overridableMkRustCrate (profileName: rec {
      name = "base64";
      version = "0.21.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9d297deb1925b89f2ccc13d7635fa0714f12c87adce1c75356b39ca9b7178567"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bincode."1.3.3" = overridableMkRustCrate (profileName: rec {
      name = "bincode";
      version = "1.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b1f45e9417d87227c7a56d22e471c6206462cba514c7590c09aff4cf6d1ddcad"; };
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" = overridableMkRustCrate (profileName: rec {
      name = "bit-set";
      version = "0.5.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0700ddab506f33b20a03b13996eccd309a48e5ff77d0d95926aa0210fb4e95f1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bit_vec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".bit-vec."0.6.3" = overridableMkRustCrate (profileName: rec {
      name = "bit-vec";
      version = "0.6.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "349f9b6a179ed607305526ca489b34ad0a41aed5f7980fa90eb03160b69598fb"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" = overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bef38d45163c2f1dde094a7dfd33ccf595c92905c8f8f4fdc18d06fb1037718a"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.2" = overridableMkRustCrate (profileName: rec {
      name = "bitflags";
      version = "2.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ed570934406eb16438a4e976b1b4500774099c13b8cb96eec99f620f05090ddf"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.14.0" = overridableMkRustCrate (profileName: rec {
      name = "bumpalo";
      version = "3.14.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7f30e7476521f6f8af1a1c4c0b8cc94f0bee37d91763d0ca2665f299b6cd8aec"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" = overridableMkRustCrate (profileName: rec {
      name = "bytes";
      version = "1.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a2bd12c1caf447e69cd4528f47f94d203fd2582878ecb9e9465484c4148a8223"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".camino."1.1.6" = overridableMkRustCrate (profileName: rec {
      name = "camino";
      version = "1.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c59e92b5a388f549b863a7bea62612c09f24c8393560709a54558a9abdfb3b9c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" = overridableMkRustCrate (profileName: rec {
      name = "cc";
      version = "1.0.83";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f1174fb0b6ec23863f8b971027804a42614e347eafb0a95bf0b12cdae21fc4d0"; };
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "cfg-if";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "baf1de4339761588bc0619e3cbc0120ee582ebb74b53b4efbf79117bd2da40fd"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap."4.5.0" = overridableMkRustCrate (profileName: rec {
      name = "clap";
      version = "4.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "80c21025abd42669a92efc996ef13cfb2c5c627858421ea58d5c3b331a6c134f"; };
      features = builtins.concatLists [
        [ "color" ]
        [ "default" ]
        [ "derive" ]
        [ "env" ]
        [ "error-context" ]
        [ "help" ]
        [ "std" ]
        [ "string" ]
        [ "suggestions" ]
        [ "usage" ]
        [ "wrap_help" ]
      ];
      dependencies = {
        clap_builder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.5.0" { inherit profileName; }).out;
        clap_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.5.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_builder."4.5.0" = overridableMkRustCrate (profileName: rec {
      name = "clap_builder";
      version = "4.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "458bf1f341769dfcf849846f65dffdf9146daa56bcd2a47cb4e1de9915567c99"; };
      features = builtins.concatLists [
        [ "color" ]
        [ "env" ]
        [ "error-context" ]
        [ "help" ]
        [ "std" ]
        [ "string" ]
        [ "suggestions" ]
        [ "usage" ]
        [ "wrap_help" ]
      ];
      dependencies = {
        anstream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstream."0.6.11" { inherit profileName; }).out;
        anstyle = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".anstyle."1.0.6" { inherit profileName; }).out;
        clap_lex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.7.0" { inherit profileName; }).out;
        strsim = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.0" { inherit profileName; }).out;
        terminal_size = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".terminal_size."0.3.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_derive."4.5.0" = overridableMkRustCrate (profileName: rec {
      name = "clap_derive";
      version = "4.5.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "307bc0538d5f0f83b8248db3087aa92fe504e4691294d0c96c0eabc33f47ba47"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        heck = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".clap_lex."0.7.0" = overridableMkRustCrate (profileName: rec {
      name = "clap_lex";
      version = "0.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "98cc8fbded0c607b7ba9dd60cd98df59af97e84d24e49c8557331cfc26d301ce"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".codemap."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "codemap";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b9e769b5c8c8283982a987c6e948e540254f1058d5a74b8794914d4ef5fc2a24"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".colorchoice."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "colorchoice";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "acbf1af155f9b9ef647e42cdc158db4b64a1b61f743629225fde6f3e0be2a7c7"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".comrak."0.21.0" = overridableMkRustCrate (profileName: rec {
      name = "comrak";
      version = "0.21.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6751998a48e2327773c95f6f8e03c6e77c0156ce539d74c17d2199ff3d05e197"; };
      features = builtins.concatLists [
        [ "clap" ]
        [ "cli" ]
        [ "default" ]
        [ "shell-words" ]
        [ "syntect" ]
        [ "xdg" ]
      ];
      dependencies = {
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "clap" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.0" { inherit profileName; }).out;
        derive_builder = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder."0.12.0" { inherit profileName; }).out;
        entities = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".entities."1.0.1" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.10.3" { inherit profileName; }).out;
        shell_words = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".shell-words."1.1.0" { inherit profileName; }).out;
        slug = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slug."0.1.5" { inherit profileName; }).out;
        ${ if !(hostPlatform.parsed.cpu.name == "wasm32") || hostPlatform.parsed.cpu.name == "wasm32" then "syntect" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syntect."5.2.0" { inherit profileName; }).out;
        typed_arena = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".typed-arena."2.0.2" { inherit profileName; }).out;
        unicode_categories = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" { inherit profileName; }).out;
        ${ if !hostPlatform.isWindows && !(hostPlatform.parsed.cpu.name == "wasm32") then "xdg" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".xdg."2.5.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" = overridableMkRustCrate (profileName: rec {
      name = "crc32fast";
      version = "1.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b540bd8bc810d3885c6ea91e2018302f68baba2129ab3e88f32389ee9370880d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.11" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-channel";
      version = "0.5.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "176dc175b78f56c0f321911d9c8eb2b77a78a4860b9c19db83835fea1a46649b"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        crossbeam_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.19" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".crossbeam-utils."0.8.19" = overridableMkRustCrate (profileName: rec {
      name = "crossbeam-utils";
      version = "0.8.19";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "248e3bacc7dc6baa3b21e405ee045c3047101a49145e7e9eca583ab4c2ca5345"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".darling."0.14.4" = overridableMkRustCrate (profileName: rec {
      name = "darling";
      version = "0.14.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7b750cb3417fd1b327431a470f388520309479ab0bf5e323505daf0290cd3850"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "suggestions" ]
      ];
      dependencies = {
        darling_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.14.4" { inherit profileName; }).out;
        darling_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.14.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".darling_core."0.14.4" = overridableMkRustCrate (profileName: rec {
      name = "darling_core";
      version = "0.14.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "109c1ca6e6b7f82cc233a97004ea8ed7ca123a9af07a8230878fcfda9b158bf0"; };
      features = builtins.concatLists [
        [ "strsim" ]
        [ "suggestions" ]
      ];
      dependencies = {
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        ident_case = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        strsim = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".strsim."0.10.0" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".darling_macro."0.14.4" = overridableMkRustCrate (profileName: rec {
      name = "darling_macro";
      version = "0.14.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a4aab4dbc9f7611d8b55048a3a16d2d010c2c8334e46304b40ac1cc14bf3b48e"; };
      dependencies = {
        darling_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling_core."0.14.4" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.11" = overridableMkRustCrate (profileName: rec {
      name = "deranged";
      version = "0.3.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b42b6fa04a440b495c8b04d0e71b707c585f83cb9cb28cf8cd0d976c315e31b4"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "powerfmt" ]
        [ "std" ]
      ];
      dependencies = {
        powerfmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_builder."0.12.0" = overridableMkRustCrate (profileName: rec {
      name = "derive_builder";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8d67778784b508018359cbc8696edb3db78160bab2c2a28ba7f56ef6932997f8"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        derive_builder_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder_macro."0.12.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_builder_core."0.12.0" = overridableMkRustCrate (profileName: rec {
      name = "derive_builder_core";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c11bdc11a0c47bc7d37d582b5285da6849c96681023680b906673c5707af7b0f"; };
      dependencies = {
        darling = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".darling."0.14.4" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".derive_builder_macro."0.12.0" = overridableMkRustCrate (profileName: rec {
      name = "derive_builder_macro";
      version = "0.12.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ebcda35c7a396850a55ffeac740804b40ffec779b98fffbb1738f4033f0ee79e"; };
      dependencies = {
        derive_builder_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".derive_builder_core."0.12.0" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".deunicode."1.4.2" = overridableMkRustCrate (profileName: rec {
      name = "deunicode";
      version = "1.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3ae2a35373c5c74340b79ae6780b498b2b183915ec5dacf263aac5a099bf485a"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".dotenv."0.15.0" = overridableMkRustCrate (profileName: rec {
      name = "dotenv";
      version = "0.15.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "77c90badedccf4105eca100756a0b1289e191f6fcbdadd3cee1d2f614f97da8f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".entities."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "entities";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b5320ae4c3782150d900b79807611a59a99fc9a1d61d686faafc24b93fc8d7ca"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "equivalent";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5443807d6dff69373d433ab9ef5378ad8df50ca6298caf15de6e52e24aaf54d5"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".errno."0.3.8" = overridableMkRustCrate (profileName: rec {
      name = "errno";
      version = "0.3.8";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a258e46cdc063eb8519c00b9fc845fc47bcfca4130e2f08e88665ceda8474245"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "hermit" || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fancy-regex."0.11.0" = overridableMkRustCrate (profileName: rec {
      name = "fancy-regex";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b95f7c0680e4142284cf8b22c14a476e87d61b004a3a0861872b32ef7ead40a2"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "perf" ]
        [ "unicode" ]
      ];
      dependencies = {
        bit_set = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bit-set."0.5.3" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.10.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.28" = overridableMkRustCrate (profileName: rec {
      name = "flate2";
      version = "1.0.28";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "46303f565772937ffe1d394a4fac6f411c6013172fadde9dcdb1e147a086940e"; };
      features = builtins.concatLists [
        [ "any_impl" ]
        [ "default" ]
        [ "miniz_oxide" ]
        [ "rust_backend" ]
      ];
      dependencies = {
        crc32fast = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crc32fast."1.3.2" { inherit profileName; }).out;
        miniz_oxide = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" = overridableMkRustCrate (profileName: rec {
      name = "fnv";
      version = "1.0.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3f9eec918d3f24069decb9af1554cad7c880e2da24a9afd88aca000531ab82c1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" = overridableMkRustCrate (profileName: rec {
      name = "form_urlencoded";
      version = "1.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e13624c2627564efccf4934284bdd98cbaa14e79b0b5a141218e507b3a823456"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "645c6916888f6cb6350d2550b80fb63e734897a8498abe35cfb732b6487804b0"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "async-await" ]
        [ "default" ]
        [ "executor" ]
        [ "futures-executor" ]
        [ "std" ]
      ];
      dependencies = {
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_executor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.30" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" { inherit profileName; }).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-channel";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "eac8f7d7865dcb88bd4373ab671c8cf4508703796caa2b1985a9ca867b3fcb78"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "futures-sink" ]
        [ "sink" ]
        [ "std" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-core";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dfc6580bb841c5a68e9ef15c77ccc837b40a7504914d52e47b8b0e9bbda25a1d"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-executor";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a576fc72ae164fca6b9db127eaa9a9dda0d61316034f33a0a0d4eda41f02b01d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-io";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a44623e20b9681a318efdd71c299b6b222ed6f231972bfe2f224ebad6311f0c1"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-macro";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "87750cf4b7a4c0625b1529e4c543c2182106e4dedc60a2a6455e00d212c489ac"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-sink";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9fb8e00e87438d937621c1c6269e53f536c14d3fbd6a042bb24879e57d474fb5"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-task";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "38d84fa142264698cdce1a9f9172cf383a0c82de1bddcf3092901442c4097004"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" = overridableMkRustCrate (profileName: rec {
      name = "futures-util";
      version = "0.3.30";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3d6401deb83407ab3da39eba7e33987a73c3df0c82b4bb5813ee871c19c41d48"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "async-await" ]
        [ "async-await-macro" ]
        [ "channel" ]
        [ "futures-channel" ]
        [ "futures-io" ]
        [ "futures-macro" ]
        [ "futures-sink" ]
        [ "io" ]
        [ "memchr" ]
        [ "sink" ]
        [ "slab" ]
        [ "std" ]
      ];
      dependencies = {
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_io = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-io."0.3.30" { inherit profileName; }).out;
        futures_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-macro."0.3.30" { profileName = "__noProfile"; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" { inherit profileName; }).out;
        futures_task = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-task."0.3.30" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        pin_utils = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.12" = overridableMkRustCrate (profileName: rec {
      name = "getrandom";
      version = "0.2.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "190092ea657667030ac6a35e305e62fc4dd69fd98ac98631e5d3a2b1575a12b5"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".gimli."0.28.1" = overridableMkRustCrate (profileName: rec {
      name = "gimli";
      version = "0.28.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4271d37baee1b8c7e4b708028c57d816cf9d2434acb33a549475f78c181f6253"; };
      features = builtins.concatLists [
        [ "read" ]
        [ "read-core" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".glob."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "glob";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d2fabcfbdc87f4758337ca535fb41a6d701b65693ce38287d856d1674551ec9b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".grass."0.13.2" = overridableMkRustCrate (profileName: rec {
      name = "grass";
      version = "0.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b89786a806d5b192cf4e573f9831c847a455a142d000c922bdfc1e5edad14303"; };
      features = builtins.concatLists [
        [ "clap" ]
        [ "commandline" ]
        [ "default" ]
        [ "random" ]
      ];
      dependencies = {
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.0" { inherit profileName; }).out;
        grass_compiler = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".grass_compiler."0.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".grass_compiler."0.13.2" = overridableMkRustCrate (profileName: rec {
      name = "grass_compiler";
      version = "0.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7cf7d155dd7cef20195016d01005033a5521aad307033f0f8e8bf0a02f5f7554"; };
      features = builtins.concatLists [
        [ "custom-builtin-fns" ]
        [ "default" ]
        [ "rand" ]
        [ "random" ]
      ];
      dependencies = {
        codemap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".codemap."0.1.3" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.2.2" { inherit profileName; }).out;
        lasso = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lasso."0.7.2" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        phf = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf."0.11.2" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".h2."0.4.2" = overridableMkRustCrate (profileName: rec {
      name = "h2";
      version = "0.4.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "31d030e59af851932b72ceebadf4a2b5986dba4c3b99dd2493f8273a0f151943"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.2.2" { inherit profileName; }).out;
        slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tokio_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.10" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.13.2" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.13.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "43a3c133739dddd0d2990f9a4bdf8eb4b21ef50e4851ca85ab661199821d510e"; };
      features = builtins.concatLists [
        [ "ahash" ]
        [ "default" ]
        [ "inline-more" ]
        [ "raw" ]
      ];
      dependencies = {
        ahash = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ahash."0.8.8" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.3" = overridableMkRustCrate (profileName: rec {
      name = "hashbrown";
      version = "0.14.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "290f1a1d9242c78d09ce40a5e87e7554ee637af1351968159f4952f028f75604"; };
      features = builtins.concatLists [
        [ "raw" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".heck."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "heck";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "95505c38b4572b2d910cecb0281560f54b440a19336cbbcb27bf6ce6adc6f5a8"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.5" = overridableMkRustCrate (profileName: rec {
      name = "hermit-abi";
      version = "0.3.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d0c62115964e08cb8039170eb33c1d0e2388a256930279edca206fff675f82c3"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "http";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b32afd38673a8016f7c9ae69e5af41a58f81b1d31689040f2f1959594ce194ea"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" = overridableMkRustCrate (profileName: rec {
      name = "http-body";
      version = "1.0.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1cac85db508abc24a2e48553ba12a996e87244a0395ce011e62b37158745d643"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http-body-util."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "http-body-util";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "41cb79eb393015dadd30fc252023adb0b2400a0caee0fa2a077e6e21a551e840"; };
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".http-range-header."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "http-range-header";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3ce4ef31cda248bbdb6e6820603b82dfcd9e833db65a43e997a0ccec777d11fe"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" = overridableMkRustCrate (profileName: rec {
      name = "httparse";
      version = "1.8.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d897f394bad6a705d5f4104762e116a75639e470d80901eed05a860a95cb1904"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" = overridableMkRustCrate (profileName: rec {
      name = "httpdate";
      version = "1.0.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "df3b46402a9d5adb4c86a0cf463f42e19994e3ee891101b1841f30a545cb49a9"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "hyper";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fb5aa53871fc917b1a9ed87b683a5d86db645e23acb32c2e0785a353e522fb75"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "http1" ]
        [ "http2" ]
        [ "server" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        h2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".h2."0.4.2" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" { inherit profileName; }).out;
        httparse = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httparse."1.8.0" { inherit profileName; }).out;
        httpdate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".hyper-util."0.1.3" = overridableMkRustCrate (profileName: rec {
      name = "hyper-util";
      version = "0.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ca38ef113da30126bbff9cd1705f9273e15d45498615d138b0c20279ac7a76aa"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "http1" ]
        [ "http2" ]
        [ "server" ]
        [ "server-auto" ]
        [ "tokio" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" { inherit profileName; }).out;
        hyper = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hyper."1.1.0" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.5" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ident_case."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "ident_case";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b9e0384b61958566e926dc50660321d12159025e767c18e043daf26b70104c39"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".indexmap."2.2.2" = overridableMkRustCrate (profileName: rec {
      name = "indexmap";
      version = "2.2.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "824b2ae422412366ba479e8111fd301f7b5faece8149317bb81925979a53f520"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        equivalent = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".equivalent."1.0.1" { inherit profileName; }).out;
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.14.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".init-tracing-opentelemetry."0.16.0" = overridableMkRustCrate (profileName: rec {
      name = "init-tracing-opentelemetry";
      version = "0.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa1340c5ae05415e15736a2c97b1e79b66cdb1ee7fd9b6212f44aeb9187a52ac"; };
      dependencies = {
        opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry."0.21.0" { inherit profileName; }).out;
        opentelemetry_sdk = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry_sdk."0.21.2" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.22.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" = overridableMkRustCrate (profileName: rec {
      name = "itoa";
      version = "1.0.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b1a46d1a171d865aa5f83f92695765caa047a9b4cbae2cbf37dbd613a793fd4c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.68" = overridableMkRustCrate (profileName: rec {
      name = "js-sys";
      version = "0.3.68";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "406cda4b368d531c842222cf9d2600a9a4acce8d29423695379c6868a143a9ee"; };
      dependencies = {
        wasm_bindgen = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.91" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lasso."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "lasso";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4644821e1c3d7a560fe13d842d13f587c07348a1a05d3a797152d41c90c56df2"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        hashbrown = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hashbrown."0.13.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" = overridableMkRustCrate (profileName: rec {
      name = "lazy_static";
      version = "1.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e2abad23fbc42b3700f2f279844dc832adb2b2eb069b2df918f455c4e18cc646"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" = overridableMkRustCrate (profileName: rec {
      name = "libc";
      version = "0.2.153";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c198f91728a82281a64e1f4f9eeb25d82cb32a5de251c6bd1b5154d63a8e7bd"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "extra_traits" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".line-wrap."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "line-wrap";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f30344350a2a51da54c1d53be93fade8a237e545dbcc4bdbe635413f2117cab9"; };
      dependencies = {
        safemem = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".safemem."0.3.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.6" = overridableMkRustCrate (profileName: rec {
      name = "linked-hash-map";
      version = "0.5.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0717cef1bc8b636c6e1c1bbdefc09e6322da8a9321966e8928ef80d20f7f770f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.13" = overridableMkRustCrate (profileName: rec {
      name = "linux-raw-sys";
      version = "0.4.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "01cda141df6706de531b6c46c3a33ecca755538219bd484262fa09410c13539c"; };
      features = builtins.concatLists [
        [ "elf" ]
        [ "errno" ]
        [ "general" ]
        [ "ioctl" ]
        [ "no_std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.11" = overridableMkRustCrate (profileName: rec {
      name = "lock_api";
      version = "0.4.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3c168f8615b12bc01f9c17e2eb0cc07dcae1940121185446edc3744920e8ef45"; };
      features = builtins.concatLists [
        [ "atomic_usize" ]
        [ "default" ]
      ];
      dependencies = {
        scopeguard = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" = overridableMkRustCrate (profileName: rec {
      name = "log";
      version = "0.4.20";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b5e6163cb8c49088c2c36f57875e58ccd8c87c7427f7fbd50ea6710b2f3f2e8f"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "matchers";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8263075bb86c5a1b1427b5ae862e8889656f126e9f77c484496e8b47cf5c5558"; };
      dependencies = {
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".matchit."0.7.3" = overridableMkRustCrate (profileName: rec {
      name = "matchit";
      version = "0.7.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0e7465ac9959cc2b1404e8e2367b43684a6d13790fe23056cc8c6c5a6b7bcb94"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".maud."0.26.0" = overridableMkRustCrate (profileName: rec {
      name = "maud";
      version = "0.26.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "df518b75016b4289cdddffa1b01f2122f4a49802c93191f3133f6dc2472ebcaa"; };
      features = builtins.concatLists [
        [ "axum" ]
        [ "axum-core" ]
        [ "default" ]
        [ "http" ]
      ];
      dependencies = {
        axum_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum-core."0.4.3" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        maud_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".maud_macros."0.26.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".maud_macros."0.26.0" = overridableMkRustCrate (profileName: rec {
      name = "maud_macros";
      version = "0.26.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fa453238ec218da0af6b11fc5978d3b5c3a45ed97b722391a2a11f3306274e18"; };
      dependencies = {
        proc_macro_error = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" = overridableMkRustCrate (profileName: rec {
      name = "memchr";
      version = "2.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "523dc4f511e55ab87b694dc30d0f820d60906ef06413f93d4d7a1385599cc149"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" = overridableMkRustCrate (profileName: rec {
      name = "mime";
      version = "0.3.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6877bb514081ee2a7ff5ef9de3281f14a4dd4bceac4c09388074a6b5df8a139a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.4" = overridableMkRustCrate (profileName: rec {
      name = "mime_guess";
      version = "2.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4192263c238a5f0d0c6bfd21f336a313a4ce1c450542449ca191bb657b4642ef"; };
      dependencies = {
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        unicase = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.7.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        unicase = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".unicase."2.7.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".miniz_oxide."0.7.2" = overridableMkRustCrate (profileName: rec {
      name = "miniz_oxide";
      version = "0.7.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9d811f3e15f28568be3407c8e7fdb6514c1cda3cb30683f15b6a1a1dc4ea14a7"; };
      features = builtins.concatLists [
        [ "with-alloc" ]
      ];
      dependencies = {
        adler = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".adler."1.0.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".mio."0.8.10" = overridableMkRustCrate (profileName: rec {
      name = "mio";
      version = "0.8.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f3d0b296e374a4e6f3c7b0a1f5a51d748a0d34c85e7dc48fc3fa9a87657fe09"; };
      features = builtins.concatLists [
        [ "net" ]
        [ "os-ext" ]
        [ "os-poll" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix || hostPlatform.parsed.kernel.name == "wasi" then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "wasi" then "wasi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" = overridableMkRustCrate (profileName: rec {
      name = "nu-ansi-term";
      version = "0.46.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "77a8165726e8236064dbb45459242600304b42a5ea24ee2948e18e023bf7ba84"; };
      dependencies = {
        overload = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "windows" then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "num-conv";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "51d515d32fb182ee37cda2ccdcb92950d6a3c2893aa280e540671c2cd0f3b1d9"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.18" = overridableMkRustCrate (profileName: rec {
      name = "num-traits";
      version = "0.2.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "da0df0e5185db44f69b44f26786fe401b6c293d1907744beaa7fa62b2e5a517a"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" = overridableMkRustCrate (profileName: rec {
      name = "num_cpus";
      version = "1.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4161fcb6d602d4d2081af7c3a45852d875a03dd337a6bfdd6e06407b61342a43"; };
      dependencies = {
        ${ if hostPlatform.parsed.kernel.name == "hermit" then "hermit_abi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".hermit-abi."0.3.5" { inherit profileName; }).out;
        ${ if !hostPlatform.isWindows then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".object."0.32.2" = overridableMkRustCrate (profileName: rec {
      name = "object";
      version = "0.32.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a6a622008b6e321afc04970976f62ee297fdbaa6f95318ca343e3eebb9648441"; };
      features = builtins.concatLists [
        [ "archive" ]
        [ "coff" ]
        [ "elf" ]
        [ "macho" ]
        [ "pe" ]
        [ "read_core" ]
        [ "unaligned" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" = overridableMkRustCrate (profileName: rec {
      name = "once_cell";
      version = "1.19.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3fdb12b2476b595f9358c5161aa467c2438859caa136dec86c26fdd2efe17b92"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "race" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".onig."6.4.0" = overridableMkRustCrate (profileName: rec {
      name = "onig";
      version = "6.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8c4b31c8722ad9171c6d77d3557db078cab2bd50afcc9d09c8b315c59df8ca4f"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        onig_sys = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".onig_sys."69.8.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".onig_sys."69.8.1" = overridableMkRustCrate (profileName: rec {
      name = "onig_sys";
      version = "69.8.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7b829e3d7e9cc74c7e315ee8edb185bf4190da5acde74afd7fc59c35b1f086e7"; };
      buildDependencies = {
        cc = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".cc."1.0.83" { profileName = "__noProfile"; }).out;
        pkg_config = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.29" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".opentelemetry."0.21.0" = overridableMkRustCrate (profileName: rec {
      name = "opentelemetry";
      version = "0.21.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1e32339a5dc40459130b3bd269e9892439f55b33e772d2a9d402a789baaf4e8a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "metrics" ]
        [ "pin-project-lite" ]
        [ "trace" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.2.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "wasi") then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.68" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" { inherit profileName; }).out;
        urlencoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".opentelemetry_sdk."0.21.2" = overridableMkRustCrate (profileName: rec {
      name = "opentelemetry_sdk";
      version = "0.21.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2f16aec8a98a457a52664d69e0091bac3a0abd18ead9b641cb00202ba4e0efe4"; };
      features = builtins.concatLists [
        [ "async-trait" ]
        [ "crossbeam-channel" ]
        [ "glob" ]
        [ "metrics" ]
        [ "percent-encoding" ]
        [ "rand" ]
        [ "rt-tokio" ]
        [ "tokio" ]
        [ "tokio-stream" ]
        [ "trace" ]
      ];
      dependencies = {
        async_trait = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".async-trait."0.1.77" { profileName = "__noProfile"; }).out;
        crossbeam_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".crossbeam-channel."0.5.11" { inherit profileName; }).out;
        futures_channel = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-channel."0.3.30" { inherit profileName; }).out;
        futures_executor = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-executor."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        glob = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".glob."0.3.1" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry."0.21.0" { inherit profileName; }).out;
        ordered_float = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ordered-float."4.2.0" { inherit profileName; }).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tokio_stream = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ordered-float."4.2.0" = overridableMkRustCrate (profileName: rec {
      name = "ordered-float";
      version = "4.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a76df7075c7d4d01fdcb46c912dd17fba5b60c78ea480b475f2b6ab6f666584e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        num_traits = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-traits."0.2.18" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".overload."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "overload";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b15813163c1d831bf4a13c3610c05c0d03b39feb07f7e09fa234dac9b15aaf39"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot";
      version = "0.12.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3742b2c103b9f06bc9fff0a37ff4912935851bee6d36f3c02bcc755bcfec228f"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        lock_api = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lock_api."0.4.11" { inherit profileName; }).out;
        parking_lot_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".parking_lot_core."0.9.9" = overridableMkRustCrate (profileName: rec {
      name = "parking_lot_core";
      version = "0.9.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4c42a9226546d68acdd9c0a280d17ce19bfe27a46bf68784e4066115788d008e"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "redox" then "syscall" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.4.1" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.1" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_targets" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" = overridableMkRustCrate (profileName: rec {
      name = "percent-encoding";
      version = "2.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e3148f5046208a5d56bcfc03053e3ca6334e51da8dfb19b6cdc8b306fae3283e"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ade2d8b8f33c7333b51bcf0428d37e217e9f32192ae4772156f65063b8ce03dc"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "macros" ]
        [ "phf_macros" ]
        [ "std" ]
      ];
      dependencies = {
        phf_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_macros."0.11.2" { profileName = "__noProfile"; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_generator";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "48e4cc64c2ad9ebe670cb8fd69dd50ae301650392e81c05f9bfcb2d5bdbc24b0"; };
      dependencies = {
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
        rand = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_macros."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_macros";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3444646e286606587e49f3bcf1679b8cef1dc2c5ecc29ddacaffc305180d464b"; };
      dependencies = {
        phf_generator = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_generator."0.11.2" { inherit profileName; }).out;
        phf_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".phf_shared."0.11.2" = overridableMkRustCrate (profileName: rec {
      name = "phf_shared";
      version = "0.11.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "90fcb95eef784c2ac79119d1dd819e162b5da872ce6f3c3abe1e8ca1c082f72b"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        siphasher = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.11" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.4" = overridableMkRustCrate (profileName: rec {
      name = "pin-project";
      version = "1.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0302c4a0442c456bd56f841aee5c3bfd17967563f6fadc9ceb9f9c23cf3807e0"; };
      dependencies = {
        pin_project_internal = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.1.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project-internal."1.1.4" = overridableMkRustCrate (profileName: rec {
      name = "pin-project-internal";
      version = "1.1.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "266c042b60c9c76b8d53061e52b2e0d1116abc57cefc8c5cd671619a56ac3690"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" = overridableMkRustCrate (profileName: rec {
      name = "pin-project-lite";
      version = "0.2.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8afb450f006bf6385ca15ef45d71d2288452bc3683ce2e2cacc0d18e4be60b58"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pin-utils."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "pin-utils";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8b870d8c151b6f2fb93e84a13146138f05d02ed11c7e7c54f8826aaaf7c9f184"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".pkg-config."0.3.29" = overridableMkRustCrate (profileName: rec {
      name = "pkg-config";
      version = "0.3.29";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2900ede94e305130c13ddd391e0ab7cbaeb783945ae07a279c268cb05109c6cb"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".plist."1.6.0" = overridableMkRustCrate (profileName: rec {
      name = "plist";
      version = "1.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e5699cc8a63d1aa2b1ee8e12b9ad70ac790d65788cd36101fa37f87ea46c4cef"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "serde" ]
      ];
      dependencies = {
        base64 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".base64."0.21.7" { inherit profileName; }).out;
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.2.2" { inherit profileName; }).out;
        line_wrap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".line-wrap."0.1.1" { inherit profileName; }).out;
        quick_xml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quick-xml."0.31.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        time = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time."0.3.34" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "powerfmt";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "439ee305def115ba05938db6eb1644ff94165c5ab5e9420d1c1bcedbba909391"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" = overridableMkRustCrate (profileName: rec {
      name = "ppv-lite86";
      version = "0.2.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5b40af805b3121feab8a3c29f04d8ad262fa8e0561883e7653e024ae4479e6de"; };
      features = builtins.concatLists [
        [ "simd" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro-error";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "da25490ff9892aab3fcf7c36f08cfb902dd3e71ca0f9f9517bea02a73a5ce38c"; };
      dependencies = {
        proc_macro_error_attr = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" { profileName = "__noProfile"; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro-error-attr."1.0.4" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro-error-attr";
      version = "1.0.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a1be40180e52ecc98ad80b184934baf3d0d29f979574e439af5a55274b35f869"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
      };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" = overridableMkRustCrate (profileName: rec {
      name = "proc-macro2";
      version = "1.0.78";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e2422ad645d89c99f8f3e6b88a9fdeca7fabeac836b1002371c4367c8f984aae"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quick-xml."0.31.0" = overridableMkRustCrate (profileName: rec {
      name = "quick-xml";
      version = "0.31.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1004a344b30a54e2ee58d66a71b32d2db2feb0a31f9a2d302bf0536f15de2a33"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" = overridableMkRustCrate (profileName: rec {
      name = "quote";
      version = "1.0.35";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "291ec9ab5efd934aaf503a6466c5d5251535d108ee747472c3977cc5acc868ef"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "proc-macro" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand."0.8.5" = overridableMkRustCrate (profileName: rec {
      name = "rand";
      version = "0.8.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "34af8d1a0e25924bc5b7c43c079c942339d8f0a8b57c39049bef581b46327404"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "getrandom" ]
        [ "libc" ]
        [ "rand_chacha" ]
        [ "small_rng" ]
        [ "std" ]
        [ "std_rng" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        rand_chacha = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" { inherit profileName; }).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_chacha."0.3.1" = overridableMkRustCrate (profileName: rec {
      name = "rand_chacha";
      version = "0.3.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6c10a63a0fa32252be49d21e7709d4d4baf8d231c2dbce1eaa8141b9b127d88"; };
      features = builtins.concatLists [
        [ "std" ]
      ];
      dependencies = {
        ppv_lite86 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ppv-lite86."0.2.17" { inherit profileName; }).out;
        rand_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rand_core."0.6.4" = overridableMkRustCrate (profileName: rec {
      name = "rand_core";
      version = "0.6.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ec0be4795e2f6a28069bec0b5ff3e2ac9bafc99e6a9a7dc3547996c5c816922c"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "getrandom" ]
        [ "std" ]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".redox_syscall."0.4.1" = overridableMkRustCrate (profileName: rec {
      name = "redox_syscall";
      version = "0.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4722d768eff46b75989dd134e5c353f0d6296e5aaa3132e776cbdb56be7731aa"; };
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex."1.10.3" = overridableMkRustCrate (profileName: rec {
      name = "regex";
      version = "1.10.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b62dbe01f0b06f9d8dc7d49e05a0785f153b00b2c227856282f671e0318c9b15"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "perf" ]
        [ "perf-backtrack" ]
        [ "perf-cache" ]
        [ "perf-dfa" ]
        [ "perf-inline" ]
        [ "perf-literal" ]
        [ "perf-onepass" ]
        [ "std" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.2" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
        regex_automata = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.5" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.1.10" = overridableMkRustCrate (profileName: rec {
      name = "regex-automata";
      version = "0.1.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6c230d73fb8d8c1b9c0b3135c5142a8acee3a0558fb8db5cf1cb65f8d7862132"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "regex-syntax" ]
        [ "std" ]
      ];
      dependencies = {
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-automata."0.4.5" = overridableMkRustCrate (profileName: rec {
      name = "regex-automata";
      version = "0.4.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5bb987efffd3c6d0d8f5f89510bb458559eab11e4f869acb20bf845e016259cd"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "dfa-onepass" ]
        [ "hybrid" ]
        [ "meta" ]
        [ "nfa-backtrack" ]
        [ "nfa-pikevm" ]
        [ "nfa-thompson" ]
        [ "perf-inline" ]
        [ "perf-literal" ]
        [ "perf-literal-multisubstring" ]
        [ "perf-literal-substring" ]
        [ "std" ]
        [ "syntax" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
        [ "unicode-word-boundary" ]
      ];
      dependencies = {
        aho_corasick = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".aho-corasick."1.1.2" { inherit profileName; }).out;
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.6.29" = overridableMkRustCrate (profileName: rec {
      name = "regex-syntax";
      version = "0.6.29";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f162c6dd7b008981e4d40210aca20b4bd0f9b60ca9271061b07f78537722f2e1"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.2" = overridableMkRustCrate (profileName: rec {
      name = "regex-syntax";
      version = "0.8.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c08c74e62047bb2de4ff487b251e4a92e24f48745648451635cec7d591162d9f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
        [ "unicode" ]
        [ "unicode-age" ]
        [ "unicode-bool" ]
        [ "unicode-case" ]
        [ "unicode-gencat" ]
        [ "unicode-perl" ]
        [ "unicode-script" ]
        [ "unicode-segment" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustc-demangle."0.1.23" = overridableMkRustCrate (profileName: rec {
      name = "rustc-demangle";
      version = "0.1.23";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d626bb9dae77e28219937af045c257c28bfd3f69333c512553507f5f9798cb76"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.31" = overridableMkRustCrate (profileName: rec {
      name = "rustix";
      version = "0.38.31";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6ea3e1a662af26cd7a3ba09c0297a31af215563ecf42817c98df621387f4e949"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
        [ "termios" ]
        [ "use-libc-auxv" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.2" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) || hostPlatform.isWindows then "libc_errno" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".errno."0.3.8" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || !hostPlatform.isWindows && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64) || (hostPlatform.parsed.kernel.name == "android" || hostPlatform.parsed.kernel.name == "linux") && !(hostPlatform.parsed.kernel.name == "linux" && hostPlatform.parsed.cpu.significantByte == "littleEndian" && (hostPlatform.parsed.cpu.name == "armv6l" || hostPlatform.parsed.cpu.name == "armv7l" || hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.cpu.bits == 64 || hostPlatform.parsed.cpu.name == "riscv64" || hostPlatform.parsed.cpu.name == "i686" || hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.cpu.bits == 64)) then "linux_raw_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linux-raw-sys."0.4.13" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".rustversion."1.0.14" = overridableMkRustCrate (profileName: rec {
      name = "rustversion";
      version = "1.0.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7ffc183a10b4478d04cbbbfc96d0873219d962dd5accaff2ffbd4ceb7df837f4"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.16" = overridableMkRustCrate (profileName: rec {
      name = "ryu";
      version = "1.0.16";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f98d2aa92eebf49b69786be48e4477826b256916e84a57ff2a4f21923b48eb4c"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".safemem."0.3.3" = overridableMkRustCrate (profileName: rec {
      name = "safemem";
      version = "0.3.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ef703b7cb59335eae2eb93ceb664c0eb7ea6bf567079d843e09420219668e072"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" = overridableMkRustCrate (profileName: rec {
      name = "same-file";
      version = "1.0.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "93fc1dc3aaa9bfed95e02e6eadabb4baf7e3078b0bd1b4d7b6b0b68378900502"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".scopeguard."1.2.0" = overridableMkRustCrate (profileName: rec {
      name = "scopeguard";
      version = "1.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "94143f37725109f92c262ed2cf5e59bce7498c01bcc1502d7b9afe439a4e9f49"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" = overridableMkRustCrate (profileName: rec {
      name = "serde";
      version = "1.0.196";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "870026e60fa08c69f064aa766c10f10b1d62db9ccd4d0abb206472bee0ce3b32"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "derive" ]
        [ "serde_derive" ]
        [ "std" ]
      ];
      dependencies = {
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.196" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.196" = overridableMkRustCrate (profileName: rec {
      name = "serde_derive";
      version = "1.0.196";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "33c85360c95e7d137454dc81d9a4ed2b8efd8fbe19cee57357b32b9771fccb67"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.113" = overridableMkRustCrate (profileName: rec {
      name = "serde_json";
      version = "1.0.113";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "69801b70b1c3dac963ecb03a364ba0ceda9cf60c71cfe475e99864759c8b8a79"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "raw_value" ]
        [ "std" ]
      ];
      dependencies = {
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.16" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_path_to_error."0.1.15" = overridableMkRustCrate (profileName: rec {
      name = "serde_path_to_error";
      version = "0.1.15";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ebd154a240de39fdebcf5775d2675c204d7c13cf39a4c697be6493c8e734337c"; };
      dependencies = {
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.5" = overridableMkRustCrate (profileName: rec {
      name = "serde_spanned";
      version = "0.6.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "eb3622f419d1296904700073ea6cc23ad690adbd66f13ea683df73298736f0c1"; };
      features = builtins.concatLists [
        [ "serde" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".serde_urlencoded."0.7.1" = overridableMkRustCrate (profileName: rec {
      name = "serde_urlencoded";
      version = "0.7.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d3491c14715ca2294c4d6a88f15e84739788c1d030eed8c110436aafdaa2f3fd"; };
      dependencies = {
        form_urlencoded = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".form_urlencoded."1.2.1" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        ryu = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".ryu."1.0.16" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.7" = overridableMkRustCrate (profileName: rec {
      name = "sharded-slab";
      version = "0.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f40ca3c46823713e0d4209592e8d6e826aa57e928f09752619fc696c499637f6"; };
      dependencies = {
        lazy_static = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".lazy_static."1.4.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".shell-words."1.1.0" = overridableMkRustCrate (profileName: rec {
      name = "shell-words";
      version = "1.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "24188a676b6ae68c3b2cb3a01be17fbf7240ce009799bb56d5b1409051e78fde"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.1" = overridableMkRustCrate (profileName: rec {
      name = "signal-hook-registry";
      version = "1.4.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d8229b473baa5980ac72ef434c4415e70c4b5e71b423043adb4ba059f89c99a1"; };
      dependencies = {
        libc = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".siphasher."0.3.11" = overridableMkRustCrate (profileName: rec {
      name = "siphasher";
      version = "0.3.11";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "38b58827f4464d87d377d175e90bf58eb00fd8716ff0a62f80356b5e61555d0d"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".slab."0.4.9" = overridableMkRustCrate (profileName: rec {
      name = "slab";
      version = "0.4.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f92a496fb766b417c996b9c5e57daf2f7ad3b0bebe1ccfca4856390e3d3bb67"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
      buildDependencies = {
        autocfg = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".autocfg."1.1.0" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".slug."0.1.5" = overridableMkRustCrate (profileName: rec {
      name = "slug";
      version = "0.1.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3bd94acec9c8da640005f8e135a39fc0372e74535e6b368b7a04b875f784c8c4"; };
      dependencies = {
        deunicode = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".deunicode."1.4.2" { inherit profileName; }).out;
        ${ if false then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.91" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.1" = overridableMkRustCrate (profileName: rec {
      name = "smallvec";
      version = "1.13.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "e6ecd384b10a64542d77071bd64bd7b231f4ed5940fba55e98c3de13824cf3d7"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.5" = overridableMkRustCrate (profileName: rec {
      name = "socket2";
      version = "0.5.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7b5fac59a5cb5dd637972e5fca70daf0523c9067fcdc4842f053dae04a18f8e9"; };
      features = builtins.concatLists [
        [ "all" ]
      ];
      dependencies = {
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".strsim."0.10.0" = overridableMkRustCrate (profileName: rec {
      name = "strsim";
      version = "0.10.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "73473c0e59e6d5812c5dfe2a064a6444949f089e20eec9a2e5506596494e4623"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".strsim."0.11.0" = overridableMkRustCrate (profileName: rec {
      name = "strsim";
      version = "0.11.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5ee073c9e4cd00e28217186dbe12796d692868f432bf2e97ee73bed0c56dfa01"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."1.0.109" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "1.0.109";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "72b64191b275b66ffe2469e8af2c1cfe3bafa67b529ead792a6d0160888b4237"; };
      features = builtins.concatLists [
        [ "clone-impls" ]
        [ "default" ]
        [ "derive" ]
        [ "extra-traits" ]
        [ "full" ]
        [ "parsing" ]
        [ "printing" ]
        [ "proc-macro" ]
        [ "quote" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" = overridableMkRustCrate (profileName: rec {
      name = "syn";
      version = "2.0.48";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0f3531638e407dfc0814761abb7c00a5b54992b849452a0646b7f65c9f770f3f"; };
      features = builtins.concatLists [
        [ "clone-impls" ]
        [ "default" ]
        [ "derive" ]
        [ "extra-traits" ]
        [ "full" ]
        [ "parsing" ]
        [ "printing" ]
        [ "proc-macro" ]
        [ "quote" ]
        [ "visit" ]
        [ "visit-mut" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        unicode_ident = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".sync_wrapper."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "sync_wrapper";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2047c6ded9c721764247e62cd3b03c09ffc529b2ba5b10ec482ae507a4a70160"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".syntect."5.2.0" = overridableMkRustCrate (profileName: rec {
      name = "syntect";
      version = "5.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "874dcfa363995604333cf947ae9f751ca3af4522c60886774c4963943b4746b1"; };
      features = builtins.concatLists [
        [ "bincode" ]
        [ "default" ]
        [ "default-fancy" ]
        [ "default-onig" ]
        [ "default-syntaxes" ]
        [ "default-themes" ]
        [ "dump-create" ]
        [ "dump-load" ]
        [ "fancy-regex" ]
        [ "flate2" ]
        [ "fnv" ]
        [ "html" ]
        [ "onig" ]
        [ "parsing" ]
        [ "plist" ]
        [ "plist-load" ]
        [ "regex-fancy" ]
        [ "regex-onig" ]
        [ "regex-syntax" ]
        [ "yaml-load" ]
        [ "yaml-rust" ]
      ];
      dependencies = {
        bincode = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bincode."1.3.3" { inherit profileName; }).out;
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."1.3.2" { inherit profileName; }).out;
        fancy_regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fancy-regex."0.11.0" { inherit profileName; }).out;
        flate2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".flate2."1.0.28" { inherit profileName; }).out;
        fnv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".fnv."1.0.7" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        onig = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".onig."6.4.0" { inherit profileName; }).out;
        plist = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".plist."1.6.0" { inherit profileName; }).out;
        regex_syntax = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex-syntax."0.8.2" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        serde_derive = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_derive."1.0.196" { profileName = "__noProfile"; }).out;
        serde_json = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_json."1.0.113" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" { inherit profileName; }).out;
        walkdir = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".walkdir."2.4.0" { inherit profileName; }).out;
        yaml_rust = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" = overridableMkRustCrate (profileName: rec {
      name = "tap";
      version = "1.0.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "55937e1799185b12863d447f42597ed69d9928686b8d88a1df17376a097d8369"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".terminal_size."0.3.0" = overridableMkRustCrate (profileName: rec {
      name = "terminal_size";
      version = "0.3.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "21bebf2b7c9e0a515f6e0f8c51dc0f8e4696391e6f1ff30379559f8365fb0df7"; };
      dependencies = {
        ${ if !hostPlatform.isWindows then "rustix" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".rustix."0.38.31" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" = overridableMkRustCrate (profileName: rec {
      name = "thiserror";
      version = "1.0.56";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d54378c645627613241d077a3a79db965db602882668f9136ac42af9ecb730ad"; };
      dependencies = {
        thiserror_impl = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.56" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thiserror-impl."1.0.56" = overridableMkRustCrate (profileName: rec {
      name = "thiserror-impl";
      version = "1.0.56";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "fa0faa943b50f3db30a20aa7e265dbc66076993efed8463e8de414e5d06d3471"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" = overridableMkRustCrate (profileName: rec {
      name = "thread_local";
      version = "1.1.7";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3fdd6f064ccff2d6567adcb3873ca630700f00b5ad3f060c25b5dcfd9a4ce152"; };
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".time."0.3.34" = overridableMkRustCrate (profileName: rec {
      name = "time";
      version = "0.3.34";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c8248b6521bb14bc45b4067159b9b6ad792e2d6d754d6c41fb50e29fefe38749"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "formatting" ]
        [ "parsing" ]
        [ "std" ]
      ];
      dependencies = {
        deranged = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".deranged."0.3.11" { inherit profileName; }).out;
        itoa = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".itoa."1.0.10" { inherit profileName; }).out;
        num_conv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" { inherit profileName; }).out;
        powerfmt = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".powerfmt."0.2.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        time_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" { inherit profileName; }).out;
        time_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.17" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" = overridableMkRustCrate (profileName: rec {
      name = "time-core";
      version = "0.1.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ef927ca75afb808a4d64dd374f00a2adf8d0fcff8e7b184af886c3c87ec4a3f3"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".time-macros."0.2.17" = overridableMkRustCrate (profileName: rec {
      name = "time-macros";
      version = "0.2.17";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "7ba3a3ef41e6672a2f0f001392bb5dcd3ff0a9992d618ca761a11c3121547774"; };
      features = builtins.concatLists [
        [ "formatting" ]
        [ "parsing" ]
      ];
      dependencies = {
        num_conv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num-conv."0.1.0" { inherit profileName; }).out;
        time_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".time-core."0.1.2" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio";
      version = "1.36.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "61285f6515fa018fb2d1e46eb21223fff441ee8db5d0f1435e8ab4f5cdb80931"; };
      features = builtins.concatLists [
        [ "bytes" ]
        [ "default" ]
        [ "fs" ]
        [ "full" ]
        [ "io-std" ]
        [ "io-util" ]
        [ "libc" ]
        [ "macros" ]
        [ "mio" ]
        [ "net" ]
        [ "num_cpus" ]
        [ "parking_lot" ]
        [ "process" ]
        [ "rt" ]
        [ "rt-multi-thread" ]
        [ "signal" ]
        [ "signal-hook-registry" ]
        [ "socket2" ]
        [ "sync" ]
        [ "time" ]
        [ "tokio-macros" ]
        [ "windows-sys" ]
      ];
      dependencies = {
        ${ if false then "backtrace" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".backtrace."0.3.69" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "libc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".libc."0.2.153" { inherit profileName; }).out;
        mio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mio."0.8.10" { inherit profileName; }).out;
        num_cpus = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".num_cpus."1.16.0" { inherit profileName; }).out;
        parking_lot = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".parking_lot."0.12.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        ${ if hostPlatform.isUnix then "signal_hook_registry" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".signal-hook-registry."1.4.1" { inherit profileName; }).out;
        socket2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".socket2."0.5.5" { inherit profileName; }).out;
        tokio_macros = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.2.0" { profileName = "__noProfile"; }).out;
        ${ if hostPlatform.isWindows then "windows_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-macros."2.2.0" = overridableMkRustCrate (profileName: rec {
      name = "tokio-macros";
      version = "2.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5b8a1e28f2deaa14e508979454cb3a223b10b938b45af148bc0986de36f1923b"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-stream."0.1.14" = overridableMkRustCrate (profileName: rec {
      name = "tokio-stream";
      version = "0.1.14";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "397c988d37662c7dda6d2208364a706264bf3d6138b11d436cbac0ad38832842"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "time" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.10" = overridableMkRustCrate (profileName: rec {
      name = "tokio-util";
      version = "0.7.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5419f34732d9eb6ee4c3578b7989078579b7f039cbbb9ca2c4da015749371e15"; };
      features = builtins.concatLists [
        [ "codec" ]
        [ "default" ]
        [ "io" ]
        [ "tracing" ]
      ];
      dependencies = {
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_sink = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-sink."0.3.30" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".toml."0.8.10" = overridableMkRustCrate (profileName: rec {
      name = "toml";
      version = "0.8.10";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a9aad4a3066010876e8dcf5a8a06e70a558751117a145c6ce2b82c2e2054290"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "display" ]
        [ "parse" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        serde_spanned = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.5" { inherit profileName; }).out;
        toml_datetime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.5" { inherit profileName; }).out;
        toml_edit = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.5" = overridableMkRustCrate (profileName: rec {
      name = "toml_datetime";
      version = "0.6.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3550f4e9685620ac18a50ed434eb3aec30db8ba93b0287467bca5826ea25baf1"; };
      features = builtins.concatLists [
        [ "serde" ]
      ];
      dependencies = {
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".toml_edit."0.22.5" = overridableMkRustCrate (profileName: rec {
      name = "toml_edit";
      version = "0.22.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "99e68c159e8f5ba8a28c4eb7b0c0c190d77bb479047ca713270048145a9ad28a"; };
      features = builtins.concatLists [
        [ "display" ]
        [ "parse" ]
        [ "serde" ]
      ];
      dependencies = {
        indexmap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".indexmap."2.2.2" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        serde_spanned = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde_spanned."0.6.5" { inherit profileName; }).out;
        toml_datetime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml_datetime."0.6.5" { inherit profileName; }).out;
        winnow = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winnow."0.6.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" = overridableMkRustCrate (profileName: rec {
      name = "tower";
      version = "0.4.13";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b8fa9be0de6cf49e536ce1851f987bd21a43b771b09473c3549a6c853db37c1c"; };
      features = builtins.concatLists [
        [ "__common" ]
        [ "default" ]
        [ "futures-core" ]
        [ "futures-util" ]
        [ "log" ]
        [ "make" ]
        [ "pin-project" ]
        [ "pin-project-lite" ]
        [ "tokio" ]
        [ "tracing" ]
        [ "util" ]
      ];
      dependencies = {
        futures_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-core."0.3.30" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        pin_project = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project."1.1.4" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tower_layer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tower-http."0.5.1" = overridableMkRustCrate (profileName: rec {
      name = "tower-http";
      version = "0.5.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0da193277a4e2c33e59e09b5861580c33dd0a637c3883d0fa74ba40c0374af2e"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "fs" ]
        [ "futures-util" ]
        [ "httpdate" ]
        [ "mime" ]
        [ "mime_guess" ]
        [ "percent-encoding" ]
        [ "set-status" ]
        [ "tokio" ]
        [ "tokio-util" ]
        [ "tracing" ]
      ];
      dependencies = {
        bitflags = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bitflags."2.4.2" { inherit profileName; }).out;
        bytes = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bytes."1.5.0" { inherit profileName; }).out;
        futures_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures-util."0.3.30" { inherit profileName; }).out;
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        http_body = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body."1.0.0" { inherit profileName; }).out;
        http_body_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-body-util."0.1.0" { inherit profileName; }).out;
        http_range_header = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http-range-header."0.4.0" { inherit profileName; }).out;
        httpdate = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".httpdate."1.0.3" { inherit profileName; }).out;
        mime = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime."0.3.17" { inherit profileName; }).out;
        mime_guess = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".mime_guess."2.0.4" { inherit profileName; }).out;
        percent_encoding = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".percent-encoding."2.3.1" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tokio_util = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio-util."0.7.10" { inherit profileName; }).out;
        tower_layer = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" { inherit profileName; }).out;
        tower_service = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tower-layer."0.3.2" = overridableMkRustCrate (profileName: rec {
      name = "tower-layer";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c20c8dbed6283a09604c3e69b4b7eeb54e298b8a600d4d5ecb5ad39de609f1d0"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tower-service."0.3.2" = overridableMkRustCrate (profileName: rec {
      name = "tower-service";
      version = "0.3.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b6bc1c9ce2b5135ac7f93c72918fc37feb872bdc6a5533a8b85eb4b86bfdae52"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" = overridableMkRustCrate (profileName: rec {
      name = "tracing";
      version = "0.1.40";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c3523ab5a71916ccf420eebdf5521fcef02141234bbc0b8a49f2fdc4544364ef"; };
      features = builtins.concatLists [
        [ "attributes" ]
        [ "default" ]
        [ "log" ]
        [ "std" ]
        [ "tracing-attributes" ]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" { inherit profileName; }).out;
        pin_project_lite = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".pin-project-lite."0.2.13" { inherit profileName; }).out;
        tracing_attributes = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.27" { profileName = "__noProfile"; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-attributes."0.1.27" = overridableMkRustCrate (profileName: rec {
      name = "tracing-attributes";
      version = "0.1.27";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "34704c8d6ebcbc939824180af020566b01a7c01f80641264eba0999f6c2b6be7"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" = overridableMkRustCrate (profileName: rec {
      name = "tracing-core";
      version = "0.1.32";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c06d3da6113f116aaee68e4d601191614c9053067f9ab7f6edbcb161237daa54"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "once_cell" ]
        [ "std" ]
        [ "valuable" ]
      ];
      dependencies = {
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        ${ if false then "valuable" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" = overridableMkRustCrate (profileName: rec {
      name = "tracing-log";
      version = "0.2.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ee855f1f400bd0e5c02d150ae5de3840039a3f54b025156404e34c23c03f47c3"; };
      features = builtins.concatLists [
        [ "log-tracer" ]
        [ "std" ]
      ];
      dependencies = {
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.22.0" = overridableMkRustCrate (profileName: rec {
      name = "tracing-opentelemetry";
      version = "0.22.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c67ac25c5407e7b961fafc6f7e9aa5958fd297aada2d20fa2ae1737357e55596"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "metrics" ]
        [ "smallvec" ]
        [ "tracing-log" ]
      ];
      dependencies = {
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "wasi") then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.68" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry."0.21.0" { inherit profileName; }).out;
        opentelemetry_sdk = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry_sdk."0.21.2" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.1" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
        tracing_log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" { inherit profileName; }).out;
        tracing_subscriber = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "wasm32" && !(hostPlatform.parsed.kernel.name == "wasi") then "web_time" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".web-time."0.2.4" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry-instrumentation-sdk."0.16.0" = overridableMkRustCrate (profileName: rec {
      name = "tracing-opentelemetry-instrumentation-sdk";
      version = "0.16.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9920abb6a3ee3a2af7d30c9ff02900f8481935d36723c3da95cf807468218e8c"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "http" ]
      ];
      dependencies = {
        http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".http."1.0.0" { inherit profileName; }).out;
        opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".opentelemetry."0.21.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-opentelemetry."0.22.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" = overridableMkRustCrate (profileName: rec {
      name = "tracing-subscriber";
      version = "0.3.18";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ad0f048c97dbd9faa9b7df56362b8ebcaa52adb06b498c050d2f4e32f90a7a8b"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "ansi" ]
        [ "default" ]
        [ "env-filter" ]
        [ "fmt" ]
        [ "matchers" ]
        [ "nu-ansi-term" ]
        [ "once_cell" ]
        [ "regex" ]
        [ "registry" ]
        [ "sharded-slab" ]
        [ "smallvec" ]
        [ "std" ]
        [ "thread_local" ]
        [ "tracing" ]
        [ "tracing-log" ]
      ];
      dependencies = {
        matchers = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".matchers."0.1.0" { inherit profileName; }).out;
        nu_ansi_term = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".nu-ansi-term."0.46.0" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        regex = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".regex."1.10.3" { inherit profileName; }).out;
        sharded_slab = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".sharded-slab."0.1.7" { inherit profileName; }).out;
        smallvec = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".smallvec."1.13.1" { inherit profileName; }).out;
        thread_local = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thread_local."1.1.7" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_core = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-core."0.1.32" { inherit profileName; }).out;
        tracing_log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-log."0.2.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".typed-arena."2.0.2" = overridableMkRustCrate (profileName: rec {
      name = "typed-arena";
      version = "2.0.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6af6ae20167a9ece4bcb41af5b80f8a1f1df981f6391189ce00fd257af04126a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicase."2.7.0" = overridableMkRustCrate (profileName: rec {
      name = "unicase";
      version = "2.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f7d2d4dafb69621809a81864c9c1b864479e1235c0dd4e199924b9742439ed89"; };
      buildDependencies = {
        version_check = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode-ident."1.0.12" = overridableMkRustCrate (profileName: rec {
      name = "unicode-ident";
      version = "1.0.12";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3354b9ac3fae1ff6755cb6db53683adb661634f67557942dea4facebec0fee4b"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".unicode_categories."0.1.1" = overridableMkRustCrate (profileName: rec {
      name = "unicode_categories";
      version = "0.1.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "39ec24b3121d976906ece63c9daad25b85969647682eee313cb5779fdd69e14e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".urlencoding."2.1.3" = overridableMkRustCrate (profileName: rec {
      name = "urlencoding";
      version = "2.1.3";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "daf8dba3b7eb870caf1ddeed7bc9d2a049f3cfdfae7cb521b087cc33ae4c49da"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".utf8parse."0.2.1" = overridableMkRustCrate (profileName: rec {
      name = "utf8parse";
      version = "0.2.1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "711b9620af191e0cdc7468a8d14e709c3dcdb115b36f838e601583af800a370a"; };
      features = builtins.concatLists [
        [ "default" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".uuid."1.7.0" = overridableMkRustCrate (profileName: rec {
      name = "uuid";
      version = "1.7.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f00cc9702ca12d3c81455259621e676d0f7251cec66a21e98fe2e9a37db93b2a"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "rng" ]
        [ "std" ]
        [ "v4" ]
      ];
      dependencies = {
        getrandom = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".getrandom."0.2.12" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".valuable."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "valuable";
      version = "0.1.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "830b7e5d4d90034032940e4ace0d9a9a057e7a45cd94e6c007832e39edb82f6d"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".version_check."0.9.4" = overridableMkRustCrate (profileName: rec {
      name = "version_check";
      version = "0.9.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "49874b5167b65d7193b8aba1567f5c7d93d001cafc34600cee003eda787e483f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".walkdir."2.4.0" = overridableMkRustCrate (profileName: rec {
      name = "walkdir";
      version = "2.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "d71d857dc86794ca4c280d616f7da00d2dbfd8cd788846559a6813e6aa4b54ee"; };
      dependencies = {
        same_file = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".same-file."1.0.6" { inherit profileName; }).out;
        ${ if hostPlatform.isWindows then "winapi_util" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasi."0.11.0+wasi-snapshot-preview1" = overridableMkRustCrate (profileName: rec {
      name = "wasi";
      version = "0.11.0+wasi-snapshot-preview1";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9c8d87e72b64a3b4db28d11ce29237c246188f4f51057d65a7eab63b7987e423"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "std" ]
      ];
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.91" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen";
      version = "0.2.91";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c1e124130aee3fb58c5bdd6b639a0509486b0338acaaae0c84a5124b0f588b7f"; };
      features = builtins.concatLists [
        [ "default" ]
        [ "spans" ]
        [ "std" ]
      ];
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        wasm_bindgen_macro = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.91" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.91" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-backend";
      version = "0.2.91";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "c9e7e1900c352b609c8488ad12639a311045f40a35491fb69ba8c12f758af70b"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        bumpalo = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".bumpalo."3.14.0" { inherit profileName; }).out;
        log = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".log."0.4.20" { inherit profileName; }).out;
        once_cell = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".once_cell."1.19.0" { inherit profileName; }).out;
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.91" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro."0.2.91" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro";
      version = "0.2.91";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "b30af9e2d358182b5c7449424f017eba305ed32a7010509ede96cdc4696c46ed"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        wasm_bindgen_macro_support = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.91" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-macro-support."0.2.91" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-macro-support";
      version = "0.2.91";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "642f325be6301eb8107a83d12a8ac6c1e1c54345a7ef1a9261962dfefda09e66"; };
      features = builtins.concatLists [
        [ "spans" ]
      ];
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
        wasm_bindgen_backend = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-backend."0.2.91" { inherit profileName; }).out;
        wasm_bindgen_shared = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.91" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen-shared."0.2.91" = overridableMkRustCrate (profileName: rec {
      name = "wasm-bindgen-shared";
      version = "0.2.91";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "4f186bd2dcf04330886ce82d6f33dd75a7bfcf69ecf5763b89fcde53b6ac9838"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".web-time."0.2.4" = overridableMkRustCrate (profileName: rec {
      name = "web-time";
      version = "0.2.4";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "aa30049b1c872b72c89866d458eae9f20380ab280ffd1b1e18df2d3e2d98cfe0"; };
      dependencies = {
        ${ if false then "js_sys" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".js-sys."0.3.68" { inherit profileName; }).out;
        ${ if false then "wasm_bindgen" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".wasm-bindgen."0.2.91" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" = overridableMkRustCrate (profileName: rec {
      name = "winapi";
      version = "0.3.9";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "5c839a674fcd7a98952e593242ea400abe93992746761e38641405d28b00f419"; };
      features = builtins.concatLists [
        [ "consoleapi" ]
        [ "errhandlingapi" ]
        [ "fileapi" ]
        [ "handleapi" ]
        [ "minwindef" ]
        [ "processenv" ]
        [ "std" ]
        [ "sysinfoapi" ]
        [ "winbase" ]
        [ "wincon" ]
        [ "winerror" ]
        [ "winnt" ]
      ];
      dependencies = {
        ${ if hostPlatform.config == "i686-pc-windows-gnu" then "winapi_i686_pc_windows_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnu" then "winapi_x86_64_pc_windows_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-i686-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-i686-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ac3b87c63620426dd9b991e5ce0329eff545bccbbb34f3be09ff6fb6ab51b7b6"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-util."0.1.6" = overridableMkRustCrate (profileName: rec {
      name = "winapi-util";
      version = "0.1.6";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "f29e6f9198ba0d26b4c9f07dbe6f9ed633e1f3d5b8b414090084349e46a52596"; };
      dependencies = {
        ${ if hostPlatform.isWindows then "winapi" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".winapi."0.3.9" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winapi-x86_64-pc-windows-gnu."0.4.0" = overridableMkRustCrate (profileName: rec {
      name = "winapi-x86_64-pc-windows-gnu";
      version = "0.4.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "712e227841d057c1ee1cd2fb22fa7e5a5461ae8e48fa2ca79ec42cfc1931183f"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.48.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.48.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "677d2418bec65e3338edb076e806bc1ec15693c5d0104683f2efe857f61056a9"; };
      features = builtins.concatLists [
        [ "Win32" ]
        [ "Win32_Foundation" ]
        [ "Win32_Networking" ]
        [ "Win32_Networking_WinSock" ]
        [ "Win32_Security" ]
        [ "Win32_Storage" ]
        [ "Win32_Storage_FileSystem" ]
        [ "Win32_System" ]
        [ "Win32_System_Console" ]
        [ "Win32_System_IO" ]
        [ "Win32_System_Pipes" ]
        [ "Win32_System_SystemServices" ]
        [ "Win32_System_Threading" ]
        [ "Win32_System_WindowsProgramming" ]
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-sys."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-sys";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "282be5f36a8ce781fad8c8ae18fa3f9beff57ec1b52cb3de0789201425d9a33d"; };
      features = builtins.concatLists [
        [ "Win32" ]
        [ "Win32_Foundation" ]
        [ "Win32_NetworkManagement" ]
        [ "Win32_NetworkManagement_IpHelper" ]
        [ "Win32_Networking" ]
        [ "Win32_Networking_WinSock" ]
        [ "Win32_System" ]
        [ "Win32_System_Console" ]
        [ "Win32_System_Diagnostics" ]
        [ "Win32_System_Diagnostics_Debug" ]
        [ "Win32_System_Threading" ]
        [ "default" ]
      ];
      dependencies = {
        windows_targets = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9a2fa6e2155d7247be68c096456083145c183cbbbc2764150dda45a87197940c"; };
      dependencies = {
        ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows-targets."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows-targets";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8a18201040b24831fbb9e4eb208f8892e1f50a37feb53cc7ff887feb8f50e7cd"; };
      dependencies = {
        ${ if hostPlatform.config == "aarch64-pc-windows-gnullvm" then "windows_aarch64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "aarch64" && hostPlatform.parsed.abi.name == "msvc" then "windows_aarch64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "gnu" then "windows_i686_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "i686" && hostPlatform.parsed.abi.name == "msvc" then "windows_i686_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "gnu" then "windows_x86_64_gnu" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.config == "x86_64-pc-windows-gnullvm" then "windows_x86_64_gnullvm" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.0" { inherit profileName; }).out;
        ${ if hostPlatform.parsed.cpu.name == "x86_64" && hostPlatform.parsed.abi.name == "msvc" then "windows_x86_64_msvc" else null } = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.0" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "2b38e32f0abccf9987a4e3079dfb67dcd799fb61361e53e2882c3cbaf0d905d8"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_gnullvm."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_gnullvm";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "cb7764e35d4db8a7921e09562a0304bf2f93e0a51bfccee0bd0bb0b666b015ea"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dc35310971f3b2dbbf3f0690a219f40e2d9afcf64f9ab7cc1be722937c26b4bc"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_aarch64_msvc."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_aarch64_msvc";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "bbaa0368d4f1d2aaefc55b6fcfee13f41544ddf36801e793edbbfd7d7df075ef"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a75915e7def60c94dcef72200b9a8e58e5091744960da64ec734a6c6e9b3743e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_gnu."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_gnu";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "a28637cb1fa3560a16915793afb20081aba2c92ee8af57b4d5f28e4b3e7df313"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "8f55c233f70c4b27f66c523580f78f1004e8b5a8b659e05a4eb49d4166cca406"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_i686_msvc."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_i686_msvc";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ffe5e8e31046ce6230cc7215707b816e339ff4d4d67c65dffa206fd0f7aa7b9a"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "53d40abd2583d23e4718fddf1ebec84dbff8381c07cae67ff7768bbf19c6718e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnu."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnu";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "3d6fa32db2bc4a2f5abeacf2b69f7992cd09dca97498da74a151a3132c26befd"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "0b7b52767868a23d5bab768e390dc5f5c55825b6d30b86c844ff2dc7414044cc"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_gnullvm."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_gnullvm";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "1a657e1e9d3f514745a572a6846d3c7aa7dbe1658c056ed9c3344c4109a6949e"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.48.5" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.48.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "ed94fce61571a4006852b7389a063ab983c02eb1bb37b47f8272ce92d06d9538"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".windows_x86_64_msvc."0.52.0" = overridableMkRustCrate (profileName: rec {
      name = "windows_x86_64_msvc";
      version = "0.52.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "dff9641d1cd4be8d1a070daf9e3773c5f67e78b4d9d42263020c057706765c04"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".winnow."0.6.0" = overridableMkRustCrate (profileName: rec {
      name = "winnow";
      version = "0.6.0";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "6b1dbce9e90e5404c5a52ed82b1d13fc8cfbdad85033b6f57546ffd1265f8451"; };
      features = builtins.concatLists [
        [ "alloc" ]
        [ "default" ]
        [ "std" ]
      ];
      dependencies = {
        memchr = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".memchr."2.7.1" { inherit profileName; }).out;
      };
    });

    "unknown".www-saffi."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "www-saffi";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal (workspaceSrc + "/saffi");
      dependencies = {
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        init_tracing_opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".init-tracing-opentelemetry."0.16.0" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        tracing_subscriber = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing-subscriber."0.3.18" { inherit profileName; }).out;
      };
    });

    "unknown".www-saffi-dev."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "www-saffi-dev";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal (workspaceSrc + "/saffi-dev");
      dependencies = {
        www_saffi = (rustPackages."unknown".www-saffi."0.1.0" { inherit profileName; }).out;
      };
    });

    "unknown".www-saffi-wtf."0.1.0" = overridableMkRustCrate (profileName: rec {
      name = "www-saffi-wtf";
      version = "0.1.0";
      registry = "unknown";
      src = fetchCrateLocal (workspaceSrc + "/saffi-wtf");
      dependencies = {
        axum = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum."0.7.4" { inherit profileName; }).out;
        axum_tracing_opentelemetry = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".axum-tracing-opentelemetry."0.16.0" { inherit profileName; }).out;
        camino = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".camino."1.1.6" { inherit profileName; }).out;
        cfg_if = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".cfg-if."1.0.0" { inherit profileName; }).out;
        clap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".clap."4.5.0" { inherit profileName; }).out;
        comrak = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".comrak."0.21.0" { inherit profileName; }).out;
        dotenv = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".dotenv."0.15.0" { inherit profileName; }).out;
        futures = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".futures."0.3.30" { inherit profileName; }).out;
        maud = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".maud."0.26.0" { inherit profileName; }).out;
        serde = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".serde."1.0.196" { inherit profileName; }).out;
        syntect = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syntect."5.2.0" { inherit profileName; }).out;
        tap = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tap."1.0.1" { inherit profileName; }).out;
        thiserror = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" { inherit profileName; }).out;
        tokio = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tokio."1.36.0" { inherit profileName; }).out;
        toml = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".toml."0.8.10" { inherit profileName; }).out;
        tower = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower."0.4.13" { inherit profileName; }).out;
        tower_http = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tower-http."0.5.1" { inherit profileName; }).out;
        tracing = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".tracing."0.1.40" { inherit profileName; }).out;
        uuid = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".uuid."1.7.0" { inherit profileName; }).out;
        www_saffi = (rustPackages."unknown".www-saffi."0.1.0" { inherit profileName; }).out;
      };
      buildDependencies = {
        grass = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".grass."0.13.2" { profileName = "__noProfile"; }).out;
        grass_compiler = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".grass_compiler."0.13.2" { profileName = "__noProfile"; }).out;
        thiserror = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".thiserror."1.0.56" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".xdg."2.5.2" = overridableMkRustCrate (profileName: rec {
      name = "xdg";
      version = "2.5.2";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "213b7324336b53d2414b2db8537e56544d981803139155afa84f76eeebb7a546"; };
    });

    "registry+https://github.com/rust-lang/crates.io-index".yaml-rust."0.4.5" = overridableMkRustCrate (profileName: rec {
      name = "yaml-rust";
      version = "0.4.5";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "56c1936c4cc7a1c9ab21a1ebb602eb942ba868cbd44a99cb7cdc5892335e1c85"; };
      dependencies = {
        linked_hash_map = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".linked-hash-map."0.5.6" { inherit profileName; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerocopy."0.7.32" = overridableMkRustCrate (profileName: rec {
      name = "zerocopy";
      version = "0.7.32";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "74d4d3961e53fa4c9a25a8637fc2bfaf2595b3d3ae34875568a5cf64787716be"; };
      features = builtins.concatLists [
        [ "simd" ]
      ];
      dependencies = {
        ${ if false then "zerocopy_derive" else null } = (buildRustPackages."registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.32" { profileName = "__noProfile"; }).out;
      };
    });

    "registry+https://github.com/rust-lang/crates.io-index".zerocopy-derive."0.7.32" = overridableMkRustCrate (profileName: rec {
      name = "zerocopy-derive";
      version = "0.7.32";
      registry = "registry+https://github.com/rust-lang/crates.io-index";
      src = fetchCratesIo { inherit name version; sha256 = "9ce1b18ccd8e73a9321186f97e46f9f04b778851177567b1975109d26a08d2a6"; };
      dependencies = {
        proc_macro2 = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".proc-macro2."1.0.78" { inherit profileName; }).out;
        quote = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".quote."1.0.35" { inherit profileName; }).out;
        syn = (rustPackages."registry+https://github.com/rust-lang/crates.io-index".syn."2.0.48" { inherit profileName; }).out;
      };
    });

  }
